{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { usersAPI } from '../../api/API';\nexport const getUsersServer = createAsyncThunk('users/getUsersServer', async () => {\n  const response = await usersAPI.getUsers();\n  const data = await response.json();\n  return data;\n});\nconst initialState = {\n  users: [1, 2, 3],\n  status: null,\n  error: null\n};\nexport const usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      console.log(action);\n      state.users.push(action.payload);\n    }\n  },\n  extraReducers: {\n    [getUsersServer.pending]: (state, action) => {\n      state.status = 'loading';\n      state.error = null;\n    },\n    [getUsersServer.fulfield]: (state, action) => {\n      state.status = 'resolved';\n      state.users = action.payload;\n    },\n    [getUsersServer.rejected]: (state, action) => {}\n  }\n});\nexport const {\n  addItem\n} = usersSlice.actions;\nexport default usersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","usersAPI","getUsersServer","response","getUsers","data","json","initialState","users","status","error","usersSlice","name","reducers","addItem","state","action","console","log","push","payload","extraReducers","pending","fulfield","rejected","actions","reducer"],"sources":["/Users/volcano/Documents/Projects/02project/course-project/src/redux/reduxSlices/usersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { usersAPI } from '../../api/API'\n\nexport const getUsersServer = createAsyncThunk(\n\t'users/getUsersServer',\n\tasync () => {\n\t\tconst response = await usersAPI.getUsers()\n\t\tconst data = await response.json();\n\t\treturn data;\n\t}\n)\n\n\nconst initialState = {\n\tusers: [1, 2, 3],\n\tstatus: null,\n\terror: null,\n}\n\nexport const usersSlice = createSlice({\n\tname: 'users',\n\tinitialState,\n\treducers: {\n\t\taddItem(state, action) {\n\t\t\tconsole.log(action)\n\t\t\tstate.users.push(action.payload)\n\t\t}\n\t},\n\textraReducers: {\n\t\t[getUsersServer.pending]: (state, action) => {\n\t\t\tstate.status = 'loading';\n\t\t\tstate.error = null;\n\t\t},\n\t\t[getUsersServer.fulfield]: (state, action) => {\n\t\t\tstate.status = 'resolved';\n\t\t\tstate.users = action.payload;\n\t\t},\n\t\t[getUsersServer.rejected]: (state, action) => { },\n\t}\n})\n\nexport const { addItem } = usersSlice.actions\n\nexport default usersSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,QAAQ,QAAQ,eAAe;AAExC,OAAO,MAAMC,cAAc,GAAGF,gBAAgB,CAC7C,sBAAsB,EACtB,YAAY;EACX,MAAMG,QAAQ,GAAG,MAAMF,QAAQ,CAACG,QAAQ,EAAE;EAC1C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,OAAOD,IAAI;AACZ,CAAC,CACD;AAGD,MAAME,YAAY,GAAG;EACpBC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChBC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGZ,WAAW,CAAC;EACrCa,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACTC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnBD,KAAK,CAACP,KAAK,CAACW,IAAI,CAACH,MAAM,CAACI,OAAO,CAAC;IACjC;EACD,CAAC;EACDC,aAAa,EAAE;IACd,CAACnB,cAAc,CAACoB,OAAO,GAAG,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC5CD,KAAK,CAACN,MAAM,GAAG,SAAS;MACxBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACnB,CAAC;IACD,CAACR,cAAc,CAACqB,QAAQ,GAAG,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACN,MAAM,GAAG,UAAU;MACzBM,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACI,OAAO;IAC7B,CAAC;IACD,CAAClB,cAAc,CAACsB,QAAQ,GAAG,CAACT,KAAK,EAAEC,MAAM,KAAK,CAAE;EACjD;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF;AAAQ,CAAC,GAAGH,UAAU,CAACc,OAAO;AAE7C,eAAed,UAAU,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}